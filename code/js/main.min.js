var stageNames = ["Battlefield","Final Destination","Delfino's Secret","Luigi's Mansion","Metal Cavern","Bowser's Castle","Kongo Jungle","Rumble Falls","Pirate Ship","Hyrule Castle","Metroid Lab","Frigate Orpheon","Yoshi's Island (Brawl)","Halberd","Lylat Cruise","Saffron City","Spear Pillar","Port Town Aero Dive","Infinite Glacier","Flat Zone 2","Castle Siege","Wario Land","Distant Planet","Skyworld","Fountain of Dreams","Fourside","Smashville","Shadow Moses Island","Green Hill Zone","PictoChat","Sky Sanctuary Zone","Temple","Yoshi's Story (Melee)","Golden Temple","Onett","Dreamland","Peach's Castle 64","Corneria","Big Blue","Brinstar","Pok√©mon Stadium 2","","","Training Room","Dracula's Castle","Mario Circuit","Clock Town","Hanenbow","Dead Line","Dinosaur Land","Oil Drum Alley","Jungle Japes","Bell Tower","Norfair","Cookie Country","Venus Lighthouse","Mushroom Kingdom","WarioWare, Inc.","Subspace","Rainbow Cruise","PokeFloats"];

// ["31","2D","38","3B","32","33","2E","36","39","3C","34","35","2F","37","2C","30","3A"],

var defaultStagesp1 = [["15", "18", "01", "23", "1C", "1A", "00", "28", "02"],
["15", "18", "01", "0C", "23", "1C", "1A", "00", "28", "02"],
["15", "18", "01", "0C", "16", "23", "1C", "1A", "00", "28", "02"],
["14", "15", "18", "01", "0C", "16", "23", "1C", "1A", "00", "28", "02"],
["15", "18", "01", "0C", "16", "0A", "20", "1C", "1A", "00", "28", "02", "23"],
["14", "15", "18", "01", "0C", "16", "0A", "20", "1C", "1A", "00", "28", "02", "23"],
["0A", "0E", "17", "14", "15", "18", "01", "0C", "16", "20", "1C", "1A", "00", "28", "02"],
["07", "0A", "0E", "17", "14", "15", "18", "01", "0C", "16", "20", "1C", "1A", "00", "28", "02"],
["04", "07", "0A", "0E", "17", "14", "15", "18", "01", "0C", "16", "20", "1C", "1A", "00", "28", "02"],
["1D", "04", "07", "0A", "0E", "17", "14", "15", "18", "01", "0C", "16", "20", "1C", "1A", "00", "28", "02"],
["06", "1D", "04", "07", "0A", "0E", "17", "14", "15", "18", "01", "0C", "16", "20", "1C", "1A", "00", "28", "02"],
["05", "06", "1D", "04", "07", "0A", "0E", "17", "14", "15", "18", "01", "0C", "16", "20", "1C", "1A", "00", "28", "02"],
["24","0E","0C","05","21","1E","09","14","15","18","01","04","23","0A","20","1C","1A","00","28","02","16"],
["17", "0E", "09", "04", "05", "0F", "24", "12", "14", "15", "18", "01", "0C", "16", "0A", "20", "1C", "1A", "00", "28", "02", "23"],
["06", "17", "0E", "09", "04", "05", "0F", "24", "12", "14", "15", "18", "01", "0C", "16", "0A", "20", "1C", "1A", "00", "28", "02", "23"],
["1D", "06", "17", "0E", "09", "04", "05", "0F", "24", "12", "14", "15", "18", "01", "0C", "16", "0A", "20", "1C", "1A", "00", "28", "02", "23"],
["0D", "1D", "06", "24", "0E", "09", "04", "05", "0F", "24", "12", "14", "15", "18", "01", "0C", "16", "0A", "20", "1C", "1A", "00", "28", "02", "23"],
["0B", "0D", "1D", "06", "24", "0E", "09", "04", "05", "0F", "24", "12", "14", "15", "18", "01", "0C", "16", "0A", "20", "1C", "1A", "00", "28", "02", "23"],
["24", "06", "19", "22", "26", "11", "08", "03", "1D", "25", "27", "1F", "12", "10", "0F", "09", "0D", "0B", "16", "07", "0E", "20", "05", "04", "0C", "0A", "17"]
];
var defaultStagesp2 = [["15", "18", "01", "23", "1C", "1A", "00", "28", "02"],
["15", "18", "01", "0C", "23", "1C", "1A", "00", "28", "02"],
["15", "18", "01", "0C", "16", "23", "1C", "1A", "00", "28", "02"],
["14", "15", "18", "01", "0C", "16", "23", "1C", "1A", "00", "28", "02"],
["15", "18", "01", "0C", "16", "0A", "20", "1C", "1A", "00", "28", "02", "23"],
["14", "15", "18", "01", "0C", "16", "0A", "20", "1C", "1A", "00", "28", "02", "23"],
["0A", "0E", "17", "14", "15", "18", "01", "0C", "16", "20", "1C", "1A", "00", "28", "02"],
["07", "0A", "0E", "17", "14", "15", "18", "01", "0C", "16", "20", "1C", "1A", "00", "28", "02"],
["04", "07", "0A", "0E", "17", "14", "15", "18", "01", "0C", "16", "20", "1C", "1A", "00", "28", "02"],
["1D", "04", "07", "0A", "0E", "17", "14", "15", "18", "01", "0C", "16", "20", "1C", "1A", "00", "28", "02"],
["06", "1D", "04", "07", "0A", "0E", "17", "14", "15", "18", "01", "0C", "16", "20", "1C", "1A", "00", "28", "02"],
["05", "06", "1D", "04", "07", "0A", "0E", "17", "14", "15", "18", "01", "0C", "16", "20", "1C", "1A", "00", "28", "02"],
["12","1B","06","19","22","26","11","13","03","07","25","27","1F","08","2B","10","0F","0D","0B","17","1D"],
["17", "0E", "09", "04", "05", "0F", "24", "12", "14", "15", "18", "01", "0C", "16", "0A", "20", "1C", "1A", "00", "28", "02", "23"],
["06", "17", "0E", "09", "04", "05", "0F", "24", "12", "14", "15", "18", "01", "0C", "16", "0A", "20", "1C", "1A", "00", "28", "02", "23"],
["1D", "06", "17", "0E", "09", "04", "05", "0F", "24", "12", "14", "15", "18", "01", "0C", "16", "0A", "20", "1C", "1A", "00", "28", "02", "23"],
["0D", "1D", "06", "24", "0E", "09", "04", "05", "0F", "24", "12", "14", "15", "18", "01", "0C", "16", "0A", "20", "1C", "1A", "00", "28", "02", "23"],
["0B", "0D", "1D", "06", "24", "0E", "09", "04", "05", "0F", "24", "12", "14", "15", "18", "01", "0C", "16", "0A", "20", "1C", "1A", "00", "28", "02", "23"],
["24", "06", "19", "22", "26", "11", "08", "03", "1D", "25", "27", "1F", "12", "10", "0F", "09", "0D", "0B", "16", "07", "0E", "20", "05", "04", "0C", "0A", "17"]
];
var defaultStagesp3 = [["15", "18", "01", "23", "1C", "1A", "00", "28", "02"],
["15", "18", "01", "0C", "23", "1C", "1A", "00", "28", "02"],
["15", "18", "01", "0C", "16", "23", "1C", "1A", "00", "28", "02"],
["14", "15", "18", "01", "0C", "16", "23", "1C", "1A", "00", "28", "02"],
["15", "18", "01", "0C", "16", "0A", "20", "1C", "1A", "00", "28", "02", "23"],
["14", "15", "18", "01", "0C", "16", "0A", "20", "1C", "1A", "00", "28", "02", "23"],
["0A", "0E", "17", "14", "15", "18", "01", "0C", "16", "20", "1C", "1A", "00", "28", "02"],
["07", "0A", "0E", "17", "14", "15", "18", "01", "0C", "16", "20", "1C", "1A", "00", "28", "02"],
["31","2D","38","3B","32","33","2E","36","39","3C","34","35","2F","37","2C","30","3A"],
["1D", "04", "07", "0A", "0E", "17", "14", "15", "18", "01", "0C", "16", "20", "1C", "1A", "00", "28", "02"],
["06", "1D", "04", "07", "0A", "0E", "17", "14", "15", "18", "01", "0C", "16", "20", "1C", "1A", "00", "28", "02"],
["05", "06", "1D", "04", "07", "0A", "0E", "17", "14", "15", "18", "01", "0C", "16", "20", "1C", "1A", "00", "28", "02"],
["0E", "09", "04", "05", "0F", "24", "12", "14", "15", "18", "01", "0C", "16", "0A", "20", "1C", "1A", "00", "28", "02", "23"],
["17", "0E", "09", "04", "05", "0F", "24", "12", "14", "15", "18", "01", "0C", "16", "0A", "20", "1C", "1A", "00", "28", "02", "23"],
["06", "17", "0E", "09", "04", "05", "0F", "24", "12", "14", "15", "18", "01", "0C", "16", "0A", "20", "1C", "1A", "00", "28", "02", "23"],
["1D", "06", "17", "0E", "09", "04", "05", "0F", "24", "12", "14", "15", "18", "01", "0C", "16", "0A", "20", "1C", "1A", "00", "28", "02", "23"],
["0D", "1D", "06", "24", "0E", "09", "04", "05", "0F", "24", "12", "14", "15", "18", "01", "0C", "16", "0A", "20", "1C", "1A", "00", "28", "02", "23"],
["0B", "0D", "1D", "06", "24", "0E", "09", "04", "05", "0F", "24", "12", "14", "15", "18", "01", "0C", "16", "0A", "20", "1C", "1A", "00", "28", "02", "23"],
["24", "06", "19", "22", "26", "11", "08", "03", "1D", "25", "27", "1F", "12", "10", "0F", "09", "0D", "0B", "16", "07", "0E", "20", "05", "04", "0C", "0A", "17"]
];

var stageRows = [[0,4,5], [0,5,5], [0,6,5], [0,7,5], [0,6,7], [0,7,7], [5,5,5], [6,5,5], [6,6,5], [7,6,5], [7,7,5], [7,6,7], [7,7,7], [8,7,7], [8,8,7], [9,8,7], [9,9,7], [9,8,9], [9,9,9]];
$(document).ready(function() {
	var page1Amount = 21;
	var page2Amount = 21;
	var page3Amount = 17;
	var removeStg;
	var removeFromGrid;
	var a;
	var ab;
	var ia;
	var myGct = new Blob();
	var reader = new FileReader();
	var startDrag=false;
	var grids = [];
	var xPos;
	var yPos;

	grids[0] = new Muuri('#stagelist-icons-page1-row1', {
		dragEnabled: true,
		dragSort: function () {
			return [grids[0], grids[1], grids[2], grids[3], grids[4], grids[5], grids[6], grids[7], grids[8]]
		  }
	}).on('receive', function (data) { dragStage(data)});

	grids[1] = new Muuri('#stagelist-icons-page1-row2', {
		dragEnabled: true,
		dragSort: function () {
			return [grids[0], grids[1], grids[2], grids[3], grids[4], grids[5], grids[6], grids[7], grids[8]]
		  }
	}).on('receive', function (data) { dragStage(data)});;

	grids[2] = new Muuri('#stagelist-icons-page1-row3', {
		dragEnabled: true,
		dragSort: function () {
			return [grids[0], grids[1], grids[2], grids[3], grids[4], grids[5], grids[6], grids[7], grids[8]]
		  }
	}).on('receive', function (data) {dragStage(data)});

	grids[3] = new Muuri('#stagelist-icons-page2-row1', {
		dragEnabled: true,
		dragSort: function () {
			return [grids[0], grids[1], grids[2], grids[3], grids[4], grids[5], grids[6], grids[7], grids[8]]
		  }
	}).on('receive', function (data) {dragStage(data)});

	grids[4] = new Muuri('#stagelist-icons-page2-row2', {
		dragEnabled: true,
		dragSort: function () {
			return [grids[0], grids[1], grids[2], grids[3], grids[4], grids[5], grids[6], grids[7], grids[8]]
		  }
	}).on('receive', function (data) {dragStage(data)});

	grids[5] = new Muuri('#stagelist-icons-page2-row3', {
		dragEnabled: true,
		dragSort: function () {
			return [grids[0], grids[1], grids[2], grids[3], grids[4], grids[5], grids[6], grids[7], grids[8]]
		  }
	}).on('receive', function (data) {dragStage(data)});

	grids[6] = new Muuri('#stagelist-icons-page3-row1', {
		dragEnabled: true,
		dragSort: function () {
			return [grids[0], grids[1], grids[2], grids[3], grids[4], grids[5], grids[6], grids[7], grids[8]]
		  }
	}).on('receive', function (data) {dragStage(data)});

	grids[7] = new Muuri('#stagelist-icons-page3-row2', {
		dragEnabled: true,
		dragSort: function () {
			return [grids[0], grids[1], grids[2], grids[3], grids[4], grids[5], grids[6], grids[7], grids[8]]
		  }
	}).on('receive', function (data) {dragStage(data)});

	grids[8] = new Muuri('#stagelist-icons-page3-row3', {
		dragEnabled: true,
		dragSort: function () {
			return [grids[0], grids[1], grids[2], grids[3], grids[4], grids[5], grids[6], grids[7], grids[8]]
		  }
	}).on('receive', function (data) {dragStage(data)});

	$("#btn-reset-page-1").click(function(e){
		e.preventDefault();
		grids[0].remove(grids[0].getItems(), {removeElements: true});
		grids[1].remove(grids[1].getItems(), {removeElements: true});
		grids[2].remove(grids[2].getItems(), {removeElements: true});
		page1Amount = 21;
		$(".page1Amount").text(" - 21 Stages");
		populateIcons("-page1", 21);
		addListeners();
	});
	$("#btn-reset-page-2").click(function(e){
		e.preventDefault();
		grids[3].remove(grids[3].getItems(), {removeElements: true});
		grids[4].remove(grids[4].getItems(), {removeElements: true});
		grids[5].remove(grids[5].getItems(), {removeElements: true});
		page2Amount = 21;
		$(".page2Amount").text(" - 21 Stages");
		populateIcons("-page2", 21);
		addListeners();
	});
	$("#btn-reset-page-3").click(function(e){
		e.preventDefault();
		grids[6].remove(grids[6].getItems(), {removeElements: true});
		grids[7].remove(grids[7].getItems(), {removeElements: true});
		grids[8].remove(grids[8].getItems(), {removeElements: true});
		page3Amount = 15;
		$(".page3Amount").text(" - 17 Stages");
		populateIcons("-page3", 17);
		addListeners();
	});
	$("#btn-add-stage-page-1").click(function(e){
		e.preventDefault();
		if(page1Amount<27){
			page1Amount++;
			$(".page1Amount").text(" - "+page1Amount+" Stages");
			addStage([grids[0],grids[1],grids[2]], "-page1", page1Amount);
		}
	});
	$("#btn-add-stage-page-2").click(function(e){
		e.preventDefault();
		if(page2Amount<27){
			page2Amount++;
			$(".page2Amount").text(" - "+page2Amount+" Stages");
			addStage([grids[3],grids[4],grids[5]], "-page2", page2Amount);
		}
	});
	$("#btn-add-stage-page-3").click(function(e){
		e.preventDefault();
		if(page3Amount<27){
			page3Amount++;
			$(".page3Amount").text(" - "+page3Amount+" Stages");
			addStage([grids[6],grids[7],grids[8]], "-page3", page3Amount);
		}
	});
	
	$("#generate_codes").click(function(e) {
		e.preventDefault();
  		var demcodes = "<br />Custom Stage Select Screen [Spunit, Phantom Wings, SOJ]<br /><br />* 046B8F5C 7C802378<br />* 046B8F64 7C6300AE<br />* 040AF618 5460083C<br />* 040AF68C 38840002<br />* 040AF6AC 5463083C<br />* 040AF6C0 88030001<br />* 040AF6E8 3860FFFF<br />* 040AF59C 3860000C<br />* 060B91C8 00000018<br />* BFA10014 7CDF3378<br />* 7CBE2B78 7C7D1B78<br />* 2D05FFFF 418A0014";
		demcodes+=generateCode().toUpperCase();
		demcodes+="<br />* 06407AAC 00000058<br />* 01010202 03030404<br />* 05050606 07070808<br />* 0909330A 0B0B0C0C<br />* 0D0D0E0E 130F1410<br />* 15111612 17131814<br />* 19151C16 1D171E18<br />* 1F19201A 211B221C<br />* 231D241E 251F2932<br />* 2A332B34 2C352D36<br />* 2F373038 3139323A<br />* 2E3B0064 0707373C";
		$("#demCodes").html(demcodes);
		if($('#demCodes:hidden')) $("#demCodes").slideToggle("slow");
	});

	$("#btn-delete_stage").click(function(e){
		e.preventDefault();
		// console.log(removeFromGrid);
		if(removeFromGrid < 3 && page1Amount > 9){
			page1Amount--;
			$(".page1Amount").text(" - "+page1Amount+" Stages");
			removeStage([grids[0],grids[1],grids[2]], "-page1", page1Amount);
		}else if(removeFromGrid >= 3 && removeFromGrid < 6 && page2Amount > 9){
			page2Amount--;
			$(".page2Amount").text(" - "+page2Amount+" Stages");
			removeStage([grids[3],grids[4],grids[5]], "-page2", page2Amount);
		}else if(removeFromGrid >= 6 && removeFromGrid < 9 && page3Amount > 9){
			page3Amount--;
			$(".page3Amount").text(" - "+page3Amount+" Stages");
			removeStage([grids[6],grids[7],grids[8]], "-page3", page3Amount);
		}
	});

	$('#stage-picker').change(function(){
		// console.log($(this).val());
		$(removeStg[0].firstChild).attr('class', 'modal '+$(this).val());
		$(removeStg[0].firstChild).attr('name', $("#stage-picker option[value='"+$(this).val()+"']").text());
		$(removeStg[0].firstChild.firstChild).attr('src', "code/images/stages/MenSelmapIcon."+$(this).val().split(' ')[0]+".png");
		$(".module-header").html($("#stage-picker option[value='"+$(this).val()+"']").text());
		$(".module-image").attr("src","code/images/previews/MenSelmapPrevbase."+$(this).val().split(' ')[0]+".png");
	});
	
	$('#gct_upload').change(function(){
		var curFiles = this.files;
		var myGct = curFiles[0].slice();
		reader.readAsArrayBuffer(myGct);
	});

	$('#load-gct').click(function(e){
		e.preventDefault();
	})

	$('#saveGct').click(function(e){
		e.preventDefault();
		writeStages();
		// ab = new ArrayBuffer((a.length)/2);
		// ia = new Uint8Array(ab);
		// var j = 0;
		// for (var i = 0; i < a.length; i+=2) {
		// 	ia[j] = parseInt(("0x"+a[i]+a[i+1]));
		// 	j++;
		// }
	});

	reader.addEventListener("loadend", function() {
		var u = new Uint8Array(this.result),
		a = "";
		for(i=0; i<u.length; i++)
			a+= (u[i] < 16 ? '0' : '') + u[i].toString(16).toUpperCase();
		u = null;
		saveGct(a);
	});

	function saveGct(gctString){
		a = gctString;
		// $("#modal-load-gct").modal();
	}

	function dragStage(data){
		if(!startDrag){
			if(data.fromGrid._element.classList[1] != data.toGrid._element.classList[1] && returnAmount(data.toGrid._element.classList[1],0) < 27 && returnAmount(data.fromGrid._element.classList[1], 0) > 9){
				var fromAmount = returnAmount(data.fromGrid._element.classList[1], -1);
				reorderGrid(data.fromGrid._element.classList[1], fromAmount);
				var toAmount = returnAmount(data.toGrid._element.classList[1], 1);
				reorderGrid(data.toGrid._element.classList[1], toAmount);
				return; }
			startDrag = true;
			var items = data.toGrid.getItems();
			for(i=0;i<items.length;i++){
				if(items[i]._id == data.item._id){
					if(items[i+1]) data.toGrid.send((i+1),data.fromGrid,0);
					else data.toGrid.send((i-1),data.fromGrid,0);
				}
			}
			startDrag = false;
		}
	}

	function reorderGrid(thePage, stageAmount){
		var page = "-"+thePage;
		var stageGrids = returnGrids(thePage);
		var stgIcons = returnIcons(stageGrids);
		refreshStages(stageGrids, page, stageAmount, stgIcons);
	}

	populateIcons("-page1", page1Amount);
	populateIcons("-page2", page2Amount);
	populateIcons("-page3", page3Amount);
	addListeners();
	generateCode();

	function addListeners(){
		$('.modal').off();
		$('.modal').on('mousedown', function (e) {
			e.preventDefault();
			xPos = e.clientX;
			yPos = e.clientY;
		});
		$('.modal').on('mouseup', function (e) {
			e.preventDefault();
			// console.log($(this).parent().parent()[0].id[25]);
			if(xPos == e.clientX && yPos == e.clientY){
				if($(this).parent().parent()[0].id[20] ==1){
					removeFromGrid = $(this).parent().parent()[0].id[25]-1;
				}else if($(this).parent().parent()[0].id[20] ==2){
					removeFromGrid = parseInt($(this).parent().parent()[0].id[25])+2;
				}else if($(this).parent().parent()[0].id[20] ==3){
					removeFromGrid = parseInt($(this).parent().parent()[0].id[25])+5;
				}
				// console.log(removeFromGrid);
				removeStg = $(this).parent();
				$('#modal-advanced_mode .module-header').html($(this).attr("name"));
				$(".module-image").attr("src","code/images/previews/MenSelmapPrevbase."+$(this)[0].className.split(' ')[1]+".png");
				$('#stage-picker').val($(this)[0].className.split(' ')[1]+" "+$(this)[0].className.split(' ')[2]);
				$("#modal-advanced_mode").modal();
			}
		});
		$('.modal').on('click', function(e){
			e.preventDefault();
		});
	}
	
	function writeStages(){
		//Array of stagelist icons in hex
		var stgIcons = "\r\nTABLE_1:\r\n\tbyte["+page1Amount+"] | \r\n";
		var count=1;
		var rollCheck = 1;
		for(i=0; i<3; i++){ grids[i].getItems().forEach(function(e){ stgIcons = stgIcons + " 0x"+e.getElement().firstChild.classList[2];
		if(rollCheck == 1 && e.getElement().firstChild.classList[2] != "2F"){ rollCheck = 0; }
		if(count == page1Amount){ stgIcons = stgIcons +" |\r\n";}
		else{ stgIcons = stgIcons + ", |\r\n"; }
		count = count + 1;}); }
		if(rollCheck == 1){ window.location.replace("https://www.youtube.com/watch?v=dQw4w9WgXcQ&ab_channel=RickAstley"); }
		stgIcons = stgIcons +  "\r\n\r\nTABLE_2:\r\n\tbyte["+page2Amount+"] | \r\n";
		count=1;
		for(i=3; i<6; i++){ grids[i].getItems().forEach(function(e){ stgIcons = stgIcons + " 0x"+e.getElement().firstChild.classList[2];
		if(count == page2Amount){ stgIcons = stgIcons +" |\r\n";}
		else{ stgIcons = stgIcons + ", |\r\n"; }
		count = count + 1;}); }
		stgIcons = stgIcons +  "\r\n\r\nTABLE_3:\r\n\tbyte["+page3Amount+"] | \r\n";
		count=1;
		for(i=6; i<9; i++){ grids[i].getItems().forEach(function(e){ stgIcons = stgIcons + " 0x"+e.getElement().firstChild.classList[2];
		if(count == page3Amount){ stgIcons = stgIcons +" |\r\n";}
		else{ stgIcons = stgIcons + ", |\r\n"; }
		count = count + 1;}); }

		// console.log(stgIcons);

		$.get('AsmFirstPart.txt', function(data) {
			a = data +  stgIcons + lastPart;
			a = a + "\r\nbyte "+page1Amount+" @ $806B929C # Page 1\r\nbyte "+page2Amount+" @ $806B92A4 # Page 2\r\nbyte "+page3Amount+" @ $80496002 # Page 3\r\n" + finalPart;
			var blob = new Blob([a], {type: "ASM file"});
			saveAs(blob, "StageFiles.asm");
		});

		//Find the index of page 1 amount
		// var page1Index = a.indexOf("6B929C000000");
		// //Find the gct stagelist for page 1 and remove it
		// var tempAmount = parseInt(a.substr((page1Index+12),2),16);
		// tempAmount += 8-(tempAmount%8);
		// tempAmount*=2;
		// a = a.substr(0,page1Index+30)+a.substr((page1Index+30)+tempAmount);
		// //Store the stagelist's amount for page 1 in a hex string
		// var page1Amountstr = page1Amount.toString(16).toUpperCase();
		// if(page1Amountstr.length == 1) page1Amountstr = "0"+page1Amountstr;
		// //Replace the gct page 1 amount with the stagelist's amount
		// a = a.substr(0,page1Index+12) + page1Amountstr + a.substr(page1Index+14);
		// a = a.substr(0,page1Index+28) + page1Amountstr + a.substr(page1Index+30);
		// //Add in the stagelist for page 1
		// a = a.substr(0,page1Index+30) + page1List + a.substr(page1Index+30);
		// //Do the same thing for page 2
		// var page2Index = a.indexOf("6B92A4000000");
		// tempAmount = parseInt(a.substr((page2Index+12),2),16);
		// tempAmount += 8-(tempAmount%8);
		// tempAmount*=2;
		// a = a.substr(0,page2Index+30)+a.substr((page2Index+30)+tempAmount);
		// //Store the stagelist's amount for page 1 in a hex string
		// var page2Amountstr = page2Amount.toString(16).toUpperCase();
		// if(page2Amountstr.length == 1) page2Amountstr = "0"+page2Amountstr;
		// //Replace the gct page 1 amount with the stagelist's amount
		// a = a.substr(0,page2Index+12) + page2Amountstr + a.substr(page2Index+14);
		// a = a.substr(0,page2Index+28) + page2Amountstr + a.substr(page2Index+30);
		// //Add in the stagelist for page 2
		// a = a.substr(0,page2Index+30) + page2List + a.substr(page2Index+30);
	}

	function populateIcons(page, stageAmount){
		var stgIcons=[];
		var itemElem = document.createElement('div');
		var rowAmount = stageAmount-9;
		var curStg = 1;
		var defaultStages =[];
		if(page=="-page1"){ defaultStages = defaultStagesp1; }
		if(page=="-page2"){ defaultStages = defaultStagesp2; }
		if(page=="-page3"){ defaultStages = defaultStagesp3; }
		for(i=0; i<3; i++){
			stgIcons=[];
			itemElem = document.createElement('div');
			if(stageRows[rowAmount][i] == 0){
				$("#stagelist-icons"+page+"-row1").hide();
				continue;
			}
			for(stg=1; stg<=stageRows[rowAmount][i]; stg++){
				temp="";
				x=parseInt((defaultStages[rowAmount][curStg-1]),16)+1;
				if (x<10) x = "0"+x;
				if (x>31) x=parseInt(x)+18;
				if($("#coloredStagelists").is(':checked')) temp+="<div class='item'><img class='item-content' src='"+colorStages(page,curStg);
				else{ temp+='<div class="item"><a href="#" name="'+stageNames[parseInt((defaultStages[rowAmount][curStg-1]),16)]+'"';
				temp+=" class='modal "+x+" "+defaultStages[rowAmount][curStg-1]+"'><img class='item-content' src='code/images/stages/MenSelmapIcon."; }
				temp+=x+".png' id='stage-icon-"+curStg+page+"' width='75' height='66'></a></div>";
				itemElem.innerHTML = temp;
				stgIcons.push(itemElem.firstChild);
				curStg++;
			}
			$("#stagelist-icons"+page+"-row"+(i+1)).width((stageRows[rowAmount][i])*85);
			if(page=="-page1"){
				grids[i].add(stgIcons);			
			}else if(page=="-page2"){
				grids[i+3].add(stgIcons);
			}else{
				grids[i+6].add(stgIcons);
			}
		}
	}

	function addStage(stageGrids, page, stageAmount){
		//stgIcons is the current list of icon elements
		var defaultStages =[];
		if(page=="-page1"){ defaultStages = defaultStagesp1; }
		if(page=="-page2"){ defaultStages = defaultStagesp2; }
		if(page=="-page3"){ defaultStages = defaultStagesp3; }
		var stgIcons = returnIcons(stageGrids);
		var curStg = 0;
		var stgReplace = stageAmount-1;
		loop1:
		for(i=0; i<stageAmount; i++){
			loop2:
			for(j=0; j<stgIcons.length; j++){
				temp = stgIcons[j].firstChild.className.split(' ')[2];
				if(temp.length == 1){ temp="0"+temp; }
				if(temp==defaultStages[stageAmount-9][i]){
					 continue loop1;
				}
			}
			stgReplace = i;
		}
		itemElem = document.createElement('div');
		x=parseInt((defaultStages[stageAmount-9][stgReplace]),16)+1;
		temp='<div class="item"><a href="#" name="'+stageNames[x-1]+'"';
		if (x<10) x = "0"+x;
		if (x>31) x=parseInt(x)+18;
		temp+=" class='modal "+x+" "+defaultStages[stageAmount-9][stgReplace]+"'><img class='item-content' src='code/images/stages/MenSelmapIcon.";
		temp+=x+".png' id='stage-icon-"+stageAmount+page+"' width='75' height='66'></a></div>";
		itemElem.innerHTML = temp;
		stgIcons.push(itemElem.firstChild);
		refreshStages(stageGrids, page, stageAmount, stgIcons);
	}

	function removeStage(stageGrids, page, stageAmount){
		grids[removeFromGrid].remove([removeStg[0]], {removeElements: true});
		var stgIcons = returnIcons(stageGrids);
		refreshStages(stageGrids, page, stageAmount, stgIcons);
	}

	function returnIcons(stageGrids){
		var stgIcons = [];
		for(i=0; i<3; i++){ stageGrids[i].getItems().forEach(function(e){stgIcons.push(e.getElement())}); }
		return stgIcons;
	}

	function returnGrids(firstPage,secondPage){
		var theGrids = [];
		if(firstPage == "page1" || secondPage == "page1"){
			theGrids.push(grids[0],grids[1],grids[2])
		}
		if(firstPage == "page2" || secondPage == "page2"){
			theGrids.push(grids[3],grids[4],grids[5])
		}
		if(firstPage == "page3" || secondPage == "page3"){
			theGrids.push(grids[6],grids[7],grids[8])
		}
		return theGrids;
	}

	function returnAmount(thePage,operator){
		if(thePage == "page1"){ page1Amount = page1Amount + operator; $(".page1Amount").text(" - "+page1Amount+" Stages"); return page1Amount; }
		if(thePage == "page2"){ page2Amount = page2Amount + operator; $(".page2Amount").text(" - "+page2Amount+" Stages"); return page2Amount; }
		if(thePage == "page3"){ page3Amount = page3Amount + operator; $(".page3Amount").text(" - "+page3Amount+" Stages"); return page3Amount; }
	}

	function refreshStages(stageGrids, page, stageAmount, stgIcons){
		var curStg = 0;
		for(i=0; i<3; i++){ stageGrids[i].remove(stageGrids[i].getItems(), {removeElements: true}) }
		for(i=0; i<3; i++){
			if(stageRows[stageAmount-9][i] == 0){
				$("#stagelist-icons"+page+"-row1").hide();
				continue;
			}else{ $("#stagelist-icons"+page+"-row1").show(); }
			for(stg=0; stg<stageRows[stageAmount-9][i]; stg++){
				stageGrids[i].add(stgIcons[curStg]);
				curStg++;
			}
			$("#stagelist-icons"+page+"-row"+(i+1)).width((stageRows[stageAmount-9][i])*85);
			stageGrids[i].layout();
		}
		addListeners();
	}
	
	//Generate Code
	function generateCode(){
		var stg1Icons = [];
		var stg2Icons = [];
		var page1Hex = parseInt(page1Amount).toString(16);
		var page2Hex = parseInt(page2Amount).toString(16);
		if(page1Hex.length == 1) page1Hex="0"+page1Hex;
		if(page2Hex.length == 1) page2Hex="0"+page2Hex;
		var stageCodes = "<br />* 006B929C 000000"+page1Hex+"<br />* 066B99D8 000000"+page1Hex+"<br />* ";

		for(i=0; i<3; i++){ grids[i].getItems().forEach(function(e){stg1Icons.push(e.getElement().firstChild.classList[2])}); }
		for(i=3; i<6; i++){ grids[i].getItems().forEach(function(e){stg2Icons.push(e.getElement().firstChild.classList[2])}); }
		
		//Get all the stage IDs
		for(stg=1; stg<=page1Amount; stg++){
			stageCodes+=stg1Icons[stg-1];
			if((stg%8)==0 && stg!=page1Amount) stageCodes+="<br />* ";
			else if((stg%4)==0) stageCodes+=" ";
		}
		
		//Add Zeros
		if(page1Amount%8 != 0){
			var addZeros = (8-(page1Amount%8))*2;
			for(zeros=addZeros; zeros>0; zeros--){
				if(zeros==8 && addZeros!=8) stageCodes+=" ";
				stageCodes+="0";
		}}

		stageCodes+= "<br />* 006B92A4 000000"+page2Hex+"<br />* 066B9A58 000000"+page2Hex+"<br />* ";
		
		for(stg=1; stg<=page2Amount; stg++){
			stageCodes+=stg2Icons[stg-1];
			if((stg%8)==0 && stg!=page2Amount) stageCodes+="<br />* ";
			else if((stg%4)==0) stageCodes+=" ";
		}
		
		//Add Zeros
		if(page2Amount%8 != 0){
			var addZeros = (8-(page2Amount%8))*2;
			for(zeros=addZeros; zeros>0; zeros--){
				if(zeros==8 && addZeros!=8) stageCodes+=" ";
				stageCodes+="0";
		}}
		
		// if($("#coloredStagelists").is(':checked')){
		// 	var stageTextures = "@echo off\r\ncopy /b baseFiles\\ miscData80\\ \r\n";
		// 	var page="-page1";
		// 	for(stg=1; stg<=$("#stage-amount"+page).val(); stg++){
		// 		stageTextures+="\r\ncopy /b ";
		// 		//projectm\pf\fighter\captain\ ssbb.d\files\fighter\captain\"
		// 		stageTextures+=(colorStages(page, stg)+($(".stage-picker"+page+"[name='"+stg+"']").val())+".png").replace(/\//g, "\\");
		// 		stageTextures+=" miscData80\\ \r\ncopy /b ";
		// 		stageTextures+=(colorStages(page, stg, 1)+($(".stage-picker"+page+"[name='"+stg+"']").val())+".png").replace(/\//g, "\\");
		// 		stageTextures+=" miscData80\\ ";
		// 		if(stg==$("#stage-amount"+page).val() && page=="-page1"){ page="-page2"; stg=0; }
		// 	}			
			
		// 	var blob = new Blob([stageTextures], {type: "text/plain;charset=utf-8"});
		// 	console.log(stageTextures);
		// 	saveAs(blob, "stagelist Textures.bat");
		// }
		
		return(stageCodes);
	}
	
	// function colorStages(page, stg, portraits){
	// 	var stageAmount = $("#stage-amount"+page).val();
	// 	var stageRowNumber = stageAmount-9;
	// 	if(page=="-page2"){
	// 		 if(portraits==1) return "stagelistTextures/Banned/Portraits/MenSelmapPrevbase.";
	// 		 return "stagelistTextures/Banned/Icons/MenSelmapIcon.";
	// 	}
	// 	else if(page=="-page1" && stg<=(stageRows[stageRowNumber][0]+stageRows[stageRowNumber][1])){
	// 		if(portraits==1) return "stagelistTextures/Counterpick/Portraits/MenSelmapPrevbase.";
	// 		return "stagelistTextures/Counterpick/Icons/MenSelmapIcon.";
	// 	}
	// 	else if(page=="-page1" && stg>(stageRows[stageRowNumber][0]+stageRows[stageRowNumber][1])){
	// 		if(portraits==1) return "stagelistTextures/Starter/Portraits/MenSelmapPrevbase.";
	// 		return "stagelistTextures/Starter/Icons/MenSelmapIcon.";
	// 	}
	// }
	// $("#stage-amount-page1").on('focus', function () {
    //     // Store the current value on focus and on change
    //     previous = this.value;
	// 	var hexIndex;
	// 	for(stg=1;stg<=previous;stg++){
	// 		hexIndex = parseInt($(".stage-picker-page1[name='"+stg+"']").val()-1);
	// 		if (hexIndex>48) hexIndex=hexIndex-18;
	// 		hexIndex=hexIndex.toString(16);
	// 		if(hexIndex.length==1) hexIndex="0"+hexIndex;
	// 		if(hexIndex=='29') hexIndex='2B';
	// 		defaultStages[previous-9][stg-1]=hexIndex;
	// 	}
    // }).change(function() {
    //     // Do something with the previous value after the change
	// 	// populatePickers("-page1");
	// 	grid1.remove();
	// 	grid2.remove();
	// 	grid3.remove();
	// 	populateIcons("-page1");
	// 	$('.modal').off('mousedown');
	// 	$('.modal').off('mouseup');
	// 	addListeners();
    // });
	
	// $("#stage-amount-page2").change(function () {
	// 	// populatePickers("-page2");
	// 	grid4.remove();
	// 	grid5.remove();
	// 	grid6.remove();
	// 	populateIcons("-page2");
	// 	$('.modal').off('mousedown');
	// 
});
var lastPart = "\r\nTABLE_4:	# Unused\r\nTABLE_5:	# Unused\r\n\r\nTABLE_STAGES:\r\n# Table of icon<->stage slot associations\r\nhalf[61] |	# Stage Count + 2\r\n| # OLD SLOTS\r\n0x0101, 0x0202, 0x0303, 0x0404, | # Battlefield, Final Destination, Delfino's Secret, Luigi's Mansion\r\n0x0505, 0x0606, 0x0707, 0x0808, | # Metal Cavern, Bowser's Castle, Kongo Jungle, Rumble Falls\r\n0x0909, 0x330A, 0x492C, 0x0C0C, | # Pirate Ship, Hyrule Castle, Metroid Lab, Frigate Orpheon\r\n0x0D0D, 0x0E0E, 0x130F, 0x1410, | # Yoshi's Island, Halberd, Lylat Cruise, Saffron City\r\n0x1511, 0x1612, 0x1713, 0x1814, | # Spear Pillar, Port Town Aero Dive, Infinite Glacier, Flat Zone 2\r\n0x1915, 0x1C16, 0x1D17, 0x1E18, | # Castle Siege, Wario Land, Distant Planet, Skyworld\r\n0x1F19, 0x201A, 0x211B, 0x221C, | # Fountain of Dreams, Fourside, Smashville, Shadow Moses Island\r\n0x231D, 0x241E, 0x4326, 0x2932, | # Green Hill Zone, PictoChat, Sky Sanctuary, Temple\r\n0x2A33, 0x472A, 0x2C35, 0x2D36, | # Yoshi's Story, Golden Temple, Onett, Dream Land\r\n0x2F37, 0x3038, 0x3139, 0x323A, | # Rainbow Cruise, Corneria, Big Blue, Brinstar\r\n0x2E3B, 0xFF64, 0xFF64, 0x373C, | # Pokemon Stadium 2, NOTHING, NOTHING, Training Room\r\n| # NEW SLOTS\r\n0x4023, 0x4124, 0x4225, 0x251F, | # Dracula's Castle, Mario Circuit, Clock Town, Hanenbow\r\n0x4427, 0x4528, 0x4629, 0x2B34, | # Dead Line, Dinosaur Land, Oil Drum Alley, Jungle Japes\r\n0x482B, 0x0B0B, 0x4A2D, 0x4B2E, | # Bell Tower, Norfair, Cookie Country, Venus Lighthouse\r\n0x4C2F, 0x4D30, 0x4E31, 0x4F3D, | # Mushroom Kingdom, WarioWare, Subspace, Rainbow Cruise\r\n0x503E				| # Poke Floats\r\n\r\n\r\nSkipStageTables:\r\n.RESET";
var finalPart = "byte 00 @ $80496003 # Page 4 (Unused)\r\nbyte 00 @ $80496004 # Page 5 (Unused)\r\nbyte 59 @ $800AF673 # Stage Count\r\n\r\nop lis r4, 0x8049 		@ $800AF58C\r\nop lwz r4, 0x5D00(r4)	@ $800AF594\r\nop lis r4, 0x8049		@ $800AF614\r\nop lwz r4, 0x5D00(r4)	@ $800AF61C\r\nop lis r4, 0x8049		@ $800AF66C\r\nop lwz r4, 0x5D00(r4)	@ $800AF674\r\nop lis r4, 0x8049		@ $800AF6A0\r\nop lwz r4, 0x5D00(r4)	@ $800AF6A8\r\nop lis r4, 0x8049		@ $800AF6D8\r\nop lwz r4, 0x5D00(r4)	@ $800AF6E0";